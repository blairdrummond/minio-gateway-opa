apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app: minio-gateway-etcd
    app.kubernetes.io/instance: minio-gateway-etcd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio-gateway
    helm.sh/chart: etcd-6.13.2
  name: minio-gateway-etcd
  namespace: default
spec:
  ports:
  - name: client
    nodePort: null
    port: 2379
    targetPort: client
  - name: peer
    nodePort: null
    port: 2380
    targetPort: peer
  selector:
    app.kubernetes.io/instance: minio-gateway-etcd
    app.kubernetes.io/name: minio-gateway
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  labels:
    app: minio-gateway-etcd
    app.kubernetes.io/instance: minio-gateway-etcd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio-gateway
    helm.sh/chart: etcd-6.13.2
  name: minio-gateway-etcd-headless
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: client
    port: 2379
    targetPort: client
  - name: peer
    port: 2380
    targetPort: peer
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/instance: minio-gateway-etcd
    app.kubernetes.io/name: minio-gateway
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: minio-gateway-etcd
    app.kubernetes.io/instance: minio-gateway-etcd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio-gateway
    helm.sh/chart: etcd-6.13.2
  name: minio-gateway-etcd
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: minio-gateway-etcd
      app.kubernetes.io/name: minio-gateway
  serviceName: minio-gateway-etcd-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: minio-gateway-etcd
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: minio-gateway
        helm.sh/chart: etcd-6.13.2
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: minio-gateway-etcd
                  app.kubernetes.io/name: minio-gateway
              namespaces:
              - default
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: ETCD_ADVERTISE_CLIENT_URLS
          value: http://minio-gateway-etcd:2379
        - name: ETCD_INITIAL_ADVERTISE_PEER_URLS
          value: http://minio-gateway-etcd:2380
        - name: BITNAMI_DEBUG
          value: "false"
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ETCDCTL_API
          value: "3"
        - name: ETCD_ON_K8S
          value: "yes"
        - name: ETCD_START_FROM_SNAPSHOT
          value: "no"
        - name: ETCD_DISASTER_RECOVERY
          value: "no"
        - name: ETCD_NAME
          value: $(MY_POD_NAME)
        - name: ETCD_DATA_DIR
          value: /bitnami/etcd/data
        - name: ETCD_LOG_LEVEL
          value: info
        - name: ALLOW_NONE_AUTHENTICATION
          value: "yes"
        - name: ETCD_AUTH_TOKEN
          value: simple
        - name: ETCD_LISTEN_CLIENT_URLS
          value: http://0.0.0.0:2379
        - name: ETCD_LISTEN_PEER_URLS
          value: http://0.0.0.0:2380
        image: docker.io/bitnami/etcd:3.5.1-debian-10-r88
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /opt/bitnami/scripts/etcd/healthcheck.sh
          failureThreshold: 5
          initialDelaySeconds: 60
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: etcd
        ports:
        - containerPort: 2379
          name: client
          protocol: TCP
        - containerPort: 2380
          name: peer
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /opt/bitnami/scripts/etcd/healthcheck.sh
          failureThreshold: 5
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "2"
            memory: 8Gi
          requests:
            cpu: "2"
            memory: 8Gi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - mountPath: /bitnami/etcd
          name: data
      securityContext:
        fsGroup: 1001
      serviceAccountName: default
      volumes:
      - emptyDir: {}
        name: data
  updateStrategy:
    type: RollingUpdate
